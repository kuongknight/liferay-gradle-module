/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bportal.kernel.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.bportal.kernel.model.AdvPackage;
import com.bportal.kernel.model.AdvPackageModel;
import com.bportal.kernel.model.AdvPackageSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AdvPackage service. Represents a row in the &quot;BPortal_AdvPackage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AdvPackageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AdvPackageImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AdvPackageImpl
 * @see AdvPackage
 * @see AdvPackageModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AdvPackageModelImpl extends BaseModelImpl<AdvPackage>
	implements AdvPackageModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a adv package model instance should use the {@link AdvPackage} interface instead.
	 */
	public static final String TABLE_NAME = "BPortal_AdvPackage";
	public static final Object[][] TABLE_COLUMNS = {
			{ "advPackageId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "templateId", Types.BIGINT },
			{ "advPackageName", Types.VARCHAR },
			{ "layoutId", Types.BIGINT },
			{ "status", Types.INTEGER },
			{ "beginDate", Types.TIMESTAMP },
			{ "expiredDate", Types.TIMESTAMP },
			{ "description", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("advPackageId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("templateId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("advPackageName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("layoutId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("beginDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expiredDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table BPortal_AdvPackage (advPackageId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,templateId LONG,advPackageName VARCHAR(75) null,layoutId LONG,status INTEGER,beginDate DATE null,expiredDate DATE null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table BPortal_AdvPackage";
	public static final String ORDER_BY_JPQL = " ORDER BY advPackage.advPackageId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BPortal_AdvPackage.advPackageId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.bportal.kernel.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.bportal.kernel.model.AdvPackage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.bportal.kernel.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.bportal.kernel.model.AdvPackage"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.bportal.kernel.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.bportal.kernel.model.AdvPackage"),
			true);
	public static final long STATUS_COLUMN_BITMASK = 1L;
	public static final long ADVPACKAGEID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AdvPackage toModel(AdvPackageSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AdvPackage model = new AdvPackageImpl();

		model.setAdvPackageId(soapModel.getAdvPackageId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTemplateId(soapModel.getTemplateId());
		model.setAdvPackageName(soapModel.getAdvPackageName());
		model.setLayoutId(soapModel.getLayoutId());
		model.setStatus(soapModel.getStatus());
		model.setBeginDate(soapModel.getBeginDate());
		model.setExpiredDate(soapModel.getExpiredDate());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AdvPackage> toModels(AdvPackageSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AdvPackage> models = new ArrayList<AdvPackage>(soapModels.length);

		for (AdvPackageSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.bportal.kernel.service.util.PropsUtil.get(
				"lock.expiration.time.com.bportal.kernel.model.AdvPackage"));

	public AdvPackageModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _advPackageId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAdvPackageId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _advPackageId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AdvPackage.class;
	}

	@Override
	public String getModelClassName() {
		return AdvPackage.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("advPackageId", getAdvPackageId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("templateId", getTemplateId());
		attributes.put("advPackageName", getAdvPackageName());
		attributes.put("layoutId", getLayoutId());
		attributes.put("status", getStatus());
		attributes.put("beginDate", getBeginDate());
		attributes.put("expiredDate", getExpiredDate());
		attributes.put("description", getDescription());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long advPackageId = (Long)attributes.get("advPackageId");

		if (advPackageId != null) {
			setAdvPackageId(advPackageId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long templateId = (Long)attributes.get("templateId");

		if (templateId != null) {
			setTemplateId(templateId);
		}

		String advPackageName = (String)attributes.get("advPackageName");

		if (advPackageName != null) {
			setAdvPackageName(advPackageName);
		}

		Long layoutId = (Long)attributes.get("layoutId");

		if (layoutId != null) {
			setLayoutId(layoutId);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date beginDate = (Date)attributes.get("beginDate");

		if (beginDate != null) {
			setBeginDate(beginDate);
		}

		Date expiredDate = (Date)attributes.get("expiredDate");

		if (expiredDate != null) {
			setExpiredDate(expiredDate);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getAdvPackageId() {
		return _advPackageId;
	}

	@Override
	public void setAdvPackageId(long advPackageId) {
		_columnBitmask = -1L;

		_advPackageId = advPackageId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getTemplateId() {
		return _templateId;
	}

	@Override
	public void setTemplateId(long templateId) {
		_templateId = templateId;
	}

	@JSON
	@Override
	public String getAdvPackageName() {
		if (_advPackageName == null) {
			return StringPool.BLANK;
		}
		else {
			return _advPackageName;
		}
	}

	@Override
	public void setAdvPackageName(String advPackageName) {
		_advPackageName = advPackageName;
	}

	@JSON
	@Override
	public long getLayoutId() {
		return _layoutId;
	}

	@Override
	public void setLayoutId(long layoutId) {
		_layoutId = layoutId;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public Date getBeginDate() {
		return _beginDate;
	}

	@Override
	public void setBeginDate(Date beginDate) {
		_beginDate = beginDate;
	}

	@JSON
	@Override
	public Date getExpiredDate() {
		return _expiredDate;
	}

	@Override
	public void setExpiredDate(Date expiredDate) {
		_expiredDate = expiredDate;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AdvPackage.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AdvPackage toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AdvPackage)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AdvPackageImpl advPackageImpl = new AdvPackageImpl();

		advPackageImpl.setAdvPackageId(getAdvPackageId());
		advPackageImpl.setGroupId(getGroupId());
		advPackageImpl.setCompanyId(getCompanyId());
		advPackageImpl.setUserId(getUserId());
		advPackageImpl.setUserName(getUserName());
		advPackageImpl.setCreateDate(getCreateDate());
		advPackageImpl.setModifiedDate(getModifiedDate());
		advPackageImpl.setTemplateId(getTemplateId());
		advPackageImpl.setAdvPackageName(getAdvPackageName());
		advPackageImpl.setLayoutId(getLayoutId());
		advPackageImpl.setStatus(getStatus());
		advPackageImpl.setBeginDate(getBeginDate());
		advPackageImpl.setExpiredDate(getExpiredDate());
		advPackageImpl.setDescription(getDescription());

		advPackageImpl.resetOriginalValues();

		return advPackageImpl;
	}

	@Override
	public int compareTo(AdvPackage advPackage) {
		int value = 0;

		if (getAdvPackageId() < advPackage.getAdvPackageId()) {
			value = -1;
		}
		else if (getAdvPackageId() > advPackage.getAdvPackageId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AdvPackage)) {
			return false;
		}

		AdvPackage advPackage = (AdvPackage)obj;

		long primaryKey = advPackage.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AdvPackageModelImpl advPackageModelImpl = this;

		advPackageModelImpl._setModifiedDate = false;

		advPackageModelImpl._originalStatus = advPackageModelImpl._status;

		advPackageModelImpl._setOriginalStatus = false;

		advPackageModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AdvPackage> toCacheModel() {
		AdvPackageCacheModel advPackageCacheModel = new AdvPackageCacheModel();

		advPackageCacheModel.advPackageId = getAdvPackageId();

		advPackageCacheModel.groupId = getGroupId();

		advPackageCacheModel.companyId = getCompanyId();

		advPackageCacheModel.userId = getUserId();

		advPackageCacheModel.userName = getUserName();

		String userName = advPackageCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			advPackageCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			advPackageCacheModel.createDate = createDate.getTime();
		}
		else {
			advPackageCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			advPackageCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			advPackageCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		advPackageCacheModel.templateId = getTemplateId();

		advPackageCacheModel.advPackageName = getAdvPackageName();

		String advPackageName = advPackageCacheModel.advPackageName;

		if ((advPackageName != null) && (advPackageName.length() == 0)) {
			advPackageCacheModel.advPackageName = null;
		}

		advPackageCacheModel.layoutId = getLayoutId();

		advPackageCacheModel.status = getStatus();

		Date beginDate = getBeginDate();

		if (beginDate != null) {
			advPackageCacheModel.beginDate = beginDate.getTime();
		}
		else {
			advPackageCacheModel.beginDate = Long.MIN_VALUE;
		}

		Date expiredDate = getExpiredDate();

		if (expiredDate != null) {
			advPackageCacheModel.expiredDate = expiredDate.getTime();
		}
		else {
			advPackageCacheModel.expiredDate = Long.MIN_VALUE;
		}

		advPackageCacheModel.description = getDescription();

		String description = advPackageCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			advPackageCacheModel.description = null;
		}

		return advPackageCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{advPackageId=");
		sb.append(getAdvPackageId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", templateId=");
		sb.append(getTemplateId());
		sb.append(", advPackageName=");
		sb.append(getAdvPackageName());
		sb.append(", layoutId=");
		sb.append(getLayoutId());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", beginDate=");
		sb.append(getBeginDate());
		sb.append(", expiredDate=");
		sb.append(getExpiredDate());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.bportal.kernel.model.AdvPackage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>advPackageId</column-name><column-value><![CDATA[");
		sb.append(getAdvPackageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>templateId</column-name><column-value><![CDATA[");
		sb.append(getTemplateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>advPackageName</column-name><column-value><![CDATA[");
		sb.append(getAdvPackageName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>layoutId</column-name><column-value><![CDATA[");
		sb.append(getLayoutId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>beginDate</column-name><column-value><![CDATA[");
		sb.append(getBeginDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiredDate</column-name><column-value><![CDATA[");
		sb.append(getExpiredDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AdvPackage.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AdvPackage.class
		};
	private long _advPackageId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _templateId;
	private String _advPackageName;
	private long _layoutId;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private Date _beginDate;
	private Date _expiredDate;
	private String _description;
	private long _columnBitmask;
	private AdvPackage _escapedModel;
}