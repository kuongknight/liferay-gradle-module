/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.bportal.kernel.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.bportal.kernel.model.AdvItem;
import com.bportal.kernel.model.AdvItemModel;
import com.bportal.kernel.model.AdvItemSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AdvItem service. Represents a row in the &quot;BPortal_AdvItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AdvItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AdvItemImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AdvItemImpl
 * @see AdvItem
 * @see AdvItemModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class AdvItemModelImpl extends BaseModelImpl<AdvItem>
	implements AdvItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a adv item model instance should use the {@link AdvItem} interface instead.
	 */
	public static final String TABLE_NAME = "BPortal_AdvItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "advItemId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "advPackageId", Types.BIGINT },
			{ "advItemName", Types.VARCHAR },
			{ "content", Types.VARCHAR },
			{ "targetLink", Types.VARCHAR },
			{ "duaration", Types.INTEGER },
			{ "status", Types.INTEGER },
			{ "order_", Types.INTEGER },
			{ "description", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("advItemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("advPackageId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("advItemName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("targetLink", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("duaration", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("order_", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table BPortal_AdvItem (advItemId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,advPackageId LONG,advItemName VARCHAR(75) null,content VARCHAR(75) null,targetLink VARCHAR(75) null,duaration INTEGER,status INTEGER,order_ INTEGER,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table BPortal_AdvItem";
	public static final String ORDER_BY_JPQL = " ORDER BY advItem.order ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BPortal_AdvItem.order_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.bportal.kernel.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.bportal.kernel.model.AdvItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.bportal.kernel.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.bportal.kernel.model.AdvItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.bportal.kernel.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.bportal.kernel.model.AdvItem"),
			true);
	public static final long ADVPACKAGEID_COLUMN_BITMASK = 1L;
	public static final long STATUS_COLUMN_BITMASK = 2L;
	public static final long ORDER_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AdvItem toModel(AdvItemSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AdvItem model = new AdvItemImpl();

		model.setAdvItemId(soapModel.getAdvItemId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setAdvPackageId(soapModel.getAdvPackageId());
		model.setAdvItemName(soapModel.getAdvItemName());
		model.setContent(soapModel.getContent());
		model.setTargetLink(soapModel.getTargetLink());
		model.setDuaration(soapModel.getDuaration());
		model.setStatus(soapModel.getStatus());
		model.setOrder(soapModel.getOrder());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AdvItem> toModels(AdvItemSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AdvItem> models = new ArrayList<AdvItem>(soapModels.length);

		for (AdvItemSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.bportal.kernel.service.util.PropsUtil.get(
				"lock.expiration.time.com.bportal.kernel.model.AdvItem"));

	public AdvItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _advItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAdvItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _advItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AdvItem.class;
	}

	@Override
	public String getModelClassName() {
		return AdvItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("advItemId", getAdvItemId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("advPackageId", getAdvPackageId());
		attributes.put("advItemName", getAdvItemName());
		attributes.put("content", getContent());
		attributes.put("targetLink", getTargetLink());
		attributes.put("duaration", getDuaration());
		attributes.put("status", getStatus());
		attributes.put("order", getOrder());
		attributes.put("description", getDescription());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long advItemId = (Long)attributes.get("advItemId");

		if (advItemId != null) {
			setAdvItemId(advItemId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long advPackageId = (Long)attributes.get("advPackageId");

		if (advPackageId != null) {
			setAdvPackageId(advPackageId);
		}

		String advItemName = (String)attributes.get("advItemName");

		if (advItemName != null) {
			setAdvItemName(advItemName);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}

		String targetLink = (String)attributes.get("targetLink");

		if (targetLink != null) {
			setTargetLink(targetLink);
		}

		Integer duaration = (Integer)attributes.get("duaration");

		if (duaration != null) {
			setDuaration(duaration);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Integer order = (Integer)attributes.get("order");

		if (order != null) {
			setOrder(order);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getAdvItemId() {
		return _advItemId;
	}

	@Override
	public void setAdvItemId(long advItemId) {
		_advItemId = advItemId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getAdvPackageId() {
		return _advPackageId;
	}

	@Override
	public void setAdvPackageId(long advPackageId) {
		_columnBitmask |= ADVPACKAGEID_COLUMN_BITMASK;

		if (!_setOriginalAdvPackageId) {
			_setOriginalAdvPackageId = true;

			_originalAdvPackageId = _advPackageId;
		}

		_advPackageId = advPackageId;
	}

	public long getOriginalAdvPackageId() {
		return _originalAdvPackageId;
	}

	@JSON
	@Override
	public String getAdvItemName() {
		if (_advItemName == null) {
			return StringPool.BLANK;
		}
		else {
			return _advItemName;
		}
	}

	@Override
	public void setAdvItemName(String advItemName) {
		_advItemName = advItemName;
	}

	@JSON
	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_content = content;
	}

	@JSON
	@Override
	public String getTargetLink() {
		if (_targetLink == null) {
			return StringPool.BLANK;
		}
		else {
			return _targetLink;
		}
	}

	@Override
	public void setTargetLink(String targetLink) {
		_targetLink = targetLink;
	}

	@JSON
	@Override
	public int getDuaration() {
		return _duaration;
	}

	@Override
	public void setDuaration(int duaration) {
		_duaration = duaration;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public int getOrder() {
		return _order;
	}

	@Override
	public void setOrder(int order) {
		_columnBitmask = -1L;

		_order = order;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AdvItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AdvItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AdvItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AdvItemImpl advItemImpl = new AdvItemImpl();

		advItemImpl.setAdvItemId(getAdvItemId());
		advItemImpl.setGroupId(getGroupId());
		advItemImpl.setCompanyId(getCompanyId());
		advItemImpl.setUserId(getUserId());
		advItemImpl.setUserName(getUserName());
		advItemImpl.setCreateDate(getCreateDate());
		advItemImpl.setModifiedDate(getModifiedDate());
		advItemImpl.setAdvPackageId(getAdvPackageId());
		advItemImpl.setAdvItemName(getAdvItemName());
		advItemImpl.setContent(getContent());
		advItemImpl.setTargetLink(getTargetLink());
		advItemImpl.setDuaration(getDuaration());
		advItemImpl.setStatus(getStatus());
		advItemImpl.setOrder(getOrder());
		advItemImpl.setDescription(getDescription());

		advItemImpl.resetOriginalValues();

		return advItemImpl;
	}

	@Override
	public int compareTo(AdvItem advItem) {
		int value = 0;

		if (getOrder() < advItem.getOrder()) {
			value = -1;
		}
		else if (getOrder() > advItem.getOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AdvItem)) {
			return false;
		}

		AdvItem advItem = (AdvItem)obj;

		long primaryKey = advItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AdvItemModelImpl advItemModelImpl = this;

		advItemModelImpl._setModifiedDate = false;

		advItemModelImpl._originalAdvPackageId = advItemModelImpl._advPackageId;

		advItemModelImpl._setOriginalAdvPackageId = false;

		advItemModelImpl._originalStatus = advItemModelImpl._status;

		advItemModelImpl._setOriginalStatus = false;

		advItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AdvItem> toCacheModel() {
		AdvItemCacheModel advItemCacheModel = new AdvItemCacheModel();

		advItemCacheModel.advItemId = getAdvItemId();

		advItemCacheModel.groupId = getGroupId();

		advItemCacheModel.companyId = getCompanyId();

		advItemCacheModel.userId = getUserId();

		advItemCacheModel.userName = getUserName();

		String userName = advItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			advItemCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			advItemCacheModel.createDate = createDate.getTime();
		}
		else {
			advItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			advItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			advItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		advItemCacheModel.advPackageId = getAdvPackageId();

		advItemCacheModel.advItemName = getAdvItemName();

		String advItemName = advItemCacheModel.advItemName;

		if ((advItemName != null) && (advItemName.length() == 0)) {
			advItemCacheModel.advItemName = null;
		}

		advItemCacheModel.content = getContent();

		String content = advItemCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			advItemCacheModel.content = null;
		}

		advItemCacheModel.targetLink = getTargetLink();

		String targetLink = advItemCacheModel.targetLink;

		if ((targetLink != null) && (targetLink.length() == 0)) {
			advItemCacheModel.targetLink = null;
		}

		advItemCacheModel.duaration = getDuaration();

		advItemCacheModel.status = getStatus();

		advItemCacheModel.order = getOrder();

		advItemCacheModel.description = getDescription();

		String description = advItemCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			advItemCacheModel.description = null;
		}

		return advItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{advItemId=");
		sb.append(getAdvItemId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", advPackageId=");
		sb.append(getAdvPackageId());
		sb.append(", advItemName=");
		sb.append(getAdvItemName());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", targetLink=");
		sb.append(getTargetLink());
		sb.append(", duaration=");
		sb.append(getDuaration());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", order=");
		sb.append(getOrder());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.bportal.kernel.model.AdvItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>advItemId</column-name><column-value><![CDATA[");
		sb.append(getAdvItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>advPackageId</column-name><column-value><![CDATA[");
		sb.append(getAdvPackageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>advItemName</column-name><column-value><![CDATA[");
		sb.append(getAdvItemName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>targetLink</column-name><column-value><![CDATA[");
		sb.append(getTargetLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duaration</column-name><column-value><![CDATA[");
		sb.append(getDuaration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>order</column-name><column-value><![CDATA[");
		sb.append(getOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AdvItem.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AdvItem.class
		};
	private long _advItemId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _advPackageId;
	private long _originalAdvPackageId;
	private boolean _setOriginalAdvPackageId;
	private String _advItemName;
	private String _content;
	private String _targetLink;
	private int _duaration;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private int _order;
	private String _description;
	private long _columnBitmask;
	private AdvItem _escapedModel;
}